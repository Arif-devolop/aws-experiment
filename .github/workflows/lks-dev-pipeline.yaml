name: lks-dev-pipeline
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Build and Push to ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin <your-ecr-url>
          docker build -t <your-ecr-repository>:latest .
          docker push <your-ecr-repository>:latest

  pull-master:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Pull Image on Master
        run: |
          ssh user@master-node "docker pull <your-ecr-repository>:latest && docker run -d <your-ecr-repository>:latest"

  pull-node1:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Pull Image on Node1
        run: |
          ssh user@node1 "docker pull <your-ecr-repository>:latest && docker run -d <your-ecr-repository>:latest"

  pull-node2:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Pull Image on Node2
        run: |
          ssh user@node2 "docker pull <your-ecr-repository>:latest && docker run -d <your-ecr-repository>:latest"

  deploy:
    runs-on: ubuntu-latest
    needs: [pull-master, pull-node1, pull-node2]
    steps:
      - name: Deploy Application
        run: |
          ssh user@docker-swarm-manager "docker service update --image <your-ecr-repository>:latest my-app-service"
